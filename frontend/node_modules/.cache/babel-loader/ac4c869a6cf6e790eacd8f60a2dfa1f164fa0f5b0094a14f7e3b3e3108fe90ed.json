{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport \"core-js/modules/web.url-search-params.delete.js\";\nimport \"core-js/modules/web.url-search-params.has.js\";\nimport \"core-js/modules/web.url-search-params.size.js\";\nimport axios from \"axios\";\nexport default {\n  data() {\n    return {\n      headers: [],\n      items: [],\n      file: null,\n      message: \"upload\",\n      newPart: \"\"\n    };\n  },\n  async mounted() {\n    await this.getItems();\n  },\n  methods: {\n    getCellStyle(value) {\n      return value === \"\" ? {\n        backgroundColor: \"black\",\n        color: \"black\"\n      } : {\n        backgroundColor: \"white\",\n        color: \"black\"\n      };\n    },\n    async getItems() {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/read/\");\n        if (response.status == 200) {\n          this.headers = response.data.columns.map(column => {\n            return {\n              title: column,\n              key: column\n            };\n          });\n          this.items = response.data.rows;\n          console.log(\"Items:\", this.items);\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    },\n    triggerFileInput() {\n      this.$refs.fileInput.click();\n    },\n    handleFileUpload(event) {\n      this.file = event.target.files[0];\n    },\n    async uploadFile() {\n      if (!this.file) {\n        this.message = \"Please select a file to upload.\";\n        return;\n      }\n      let formData = new FormData();\n      formData.append(\"file\", this.file);\n      this.message = this.file.name;\n      console.log(\"Uploading file:\", this.file);\n      try {\n        const response = await axios.post(\"http://127.0.0.1:8000/upload/\", formData, {\n          headers: {\n            \"Content-Type\": \"multipart/form-data\"\n          }\n        });\n        if (response.status == 200) {\n          this.getItems();\n        }\n      } catch (error) {\n        console.error(\"Error uploading file:\", error);\n      }\n    },\n    async exportExcel() {\n      try {\n        const response = await axios.get(\"http://127.0.0.1:8000/export/\", {\n          responseType: \"blob\"\n        });\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        const link = document.createElement(\"a\");\n        link.href = url;\n        link.setAttribute(\"download\", \"part_file.xlsx\");\n        document.body.appendChild(link);\n        link.click();\n      } catch (error) {\n        console.error(\"Download error:\", error);\n      }\n    },\n    async updateExcel() {\n      try {\n        // แปลงข้อมูลจาก items ให้เป็นรูปแบบของ excel\n        const data = {\n          columns: this.headers.map(header => header.title),\n          rows: this.items\n        };\n        const response = await axios.put(\"http://127.0.0.1:8000/update/\", {\n          data: data\n        });\n        if (response.status == 200) {\n          this.getItems();\n        }\n      } catch (error) {\n        console.error(\"Error:\", error);\n      }\n    },\n    addNewPart() {\n      // ตรวจสอบว่า partNo ไม่ว่าง\n      if (this.newPartNo.trim()) {\n        // add new part to the last column\n        this.headers.push({\n          title: this.newPartNo,\n          key: this.newPartNo\n        });\n\n        // add new part to each row\n        this.items.push({\n          Part_No: this.newPartNo,\n          ...Object.fromEntries(this.headers.slice(1).map(header => [header.title, \"\"]))\n        });\n\n        // update excel file\n        this.updateExcel();\n        this.newPartNo = \"\"; // ล้าง input หลังจากเพิ่มข้อมูลแล้ว\n      } else {\n        alert(\"Please enter a valid Part No\");\n      }\n    }\n  },\n  watch: {\n    file() {\n      this.uploadFile();\n    }\n  }\n};","map":{"version":3,"names":["axios","data","headers","items","file","message","newPart","mounted","getItems","methods","getCellStyle","value","backgroundColor","color","response","get","status","columns","map","column","title","key","rows","console","log","error","triggerFileInput","$refs","fileInput","click","handleFileUpload","event","target","files","uploadFile","formData","FormData","append","name","post","exportExcel","responseType","url","window","URL","createObjectURL","Blob","link","document","createElement","href","setAttribute","body","appendChild","updateExcel","header","put","addNewPart","newPartNo","trim","push","Part_No","Object","fromEntries","slice","alert","watch"],"sources":["C:\\Users\\thun_\\Desktop\\fullstack-test\\frontend\\src\\components\\PartManager.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <v-data-table-virtual\r\n      :headers=\"headers\"\r\n      :items=\"items\"\r\n      height=\"400\"\r\n      item-value=\"part_no\"\r\n    >\r\n      <template v-slot:top>\r\n        <v-toolbar flat>\r\n          <v-toolbar-title>Part Change over Matrix</v-toolbar-title>\r\n          <v-spacer></v-spacer>\r\n          <input\r\n            color=\"primary\"\r\n            v-model=\"newPartNo\"\r\n            placeholder=\"Enter Part No\"\r\n          />\r\n          <v-btn color=\"primary\" @click=\"addNewPart\">Add New Part No</v-btn>\r\n          <v-btn color=\"primary\" @click=\"exportExcel\">Dowload</v-btn>\r\n          <v-btn color=\"primary\" @click=\"triggerFileInput\">Upload</v-btn>\r\n          <input\r\n            type=\"file\"\r\n            ref=\"fileInput\"\r\n            @change=\"handleFileUpload\"\r\n            style=\"display: none\"\r\n          />\r\n          <!-- <p v-if=\"message\">{{ message }}</p> -->\r\n        </v-toolbar>\r\n      </template>\r\n\r\n      <template v-slot:item=\"{ item }\">\r\n        <tr>\r\n          <td\r\n            v-for=\"header in headers\"\r\n            :key=\"header.key\"\r\n            :style=\"getCellStyle(item[header.key])\"\r\n          >\r\n            {{ item[header.key] }}\r\n          </td>\r\n        </tr>\r\n      </template>\r\n    </v-data-table-virtual>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      headers: [],\r\n      items: [],\r\n      file: null,\r\n      message: \"upload\",\r\n      newPart: \"\",\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.getItems();\r\n  },\r\n\r\n  methods: {\r\n    getCellStyle(value) {\r\n      return value === \"\"\r\n        ? { backgroundColor: \"black\", color: \"black\" }\r\n        : { backgroundColor: \"white\", color: \"black\" };\r\n    },\r\n\r\n    async getItems() {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/read/\");\r\n        if (response.status == 200) {\r\n          this.headers = response.data.columns.map((column) => {\r\n            return { title: column, key: column };\r\n          });\r\n\r\n          this.items = response.data.rows;\r\n          console.log(\"Items:\", this.items);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    },\r\n\r\n    triggerFileInput() {\r\n      this.$refs.fileInput.click();\r\n    },\r\n\r\n    handleFileUpload(event) {\r\n      this.file = event.target.files[0];\r\n    },\r\n\r\n    async uploadFile() {\r\n      if (!this.file) {\r\n        this.message = \"Please select a file to upload.\";\r\n        return;\r\n      }\r\n      let formData = new FormData();\r\n      formData.append(\"file\", this.file);\r\n      this.message = this.file.name;\r\n      console.log(\"Uploading file:\", this.file);\r\n      try {\r\n        const response = await axios.post(\r\n          \"http://127.0.0.1:8000/upload/\",\r\n          formData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          }\r\n        );\r\n\r\n        if (response.status == 200) {\r\n          this.getItems();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error uploading file:\", error);\r\n      }\r\n    },\r\n    async exportExcel() {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/export/\", {\r\n          responseType: \"blob\",\r\n        });\r\n\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement(\"a\");\r\n        link.href = url;\r\n        link.setAttribute(\"download\", \"part_file.xlsx\");\r\n        document.body.appendChild(link);\r\n        link.click();\r\n      } catch (error) {\r\n        console.error(\"Download error:\", error);\r\n      }\r\n    },\r\n\r\n    async updateExcel() {\r\n      try {\r\n        // แปลงข้อมูลจาก items ให้เป็นรูปแบบของ excel\r\n        const data = {\r\n          columns: this.headers.map((header) => header.title),\r\n          rows: this.items,\r\n        };\r\n\r\n        const response = await axios.put(\"http://127.0.0.1:8000/update/\", {\r\n          data: data,\r\n        });\r\n        if (response.status == 200) {\r\n          this.getItems();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    },\r\n    addNewPart() {\r\n      // ตรวจสอบว่า partNo ไม่ว่าง\r\n      if (this.newPartNo.trim()) {\r\n        // add new part to the last column\r\n        this.headers.push({ title: this.newPartNo, key: this.newPartNo });\r\n\r\n        // add new part to each row\r\n        this.items.push({\r\n          Part_No: this.newPartNo,\r\n          ...Object.fromEntries(\r\n            this.headers.slice(1).map((header) => [header.title, \"\"])\r\n          ),\r\n        });\r\n\r\n        // update excel file\r\n        this.updateExcel();\r\n\r\n        this.newPartNo = \"\"; // ล้าง input หลังจากเพิ่มข้อมูลแล้ว\r\n      } else {\r\n        alert(\"Please enter a valid Part No\");\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    file() {\r\n      this.uploadFile();\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}