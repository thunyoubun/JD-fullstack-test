{"ast":null,"code":"import { createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, vModelText as _vModelText, createElementVNode as _createElementVNode, withDirectives as _withDirectives, createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, normalizeStyle as _normalizeStyle, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_v_toolbar_title = _resolveComponent(\"v-toolbar-title\");\n  const _component_v_spacer = _resolveComponent(\"v-spacer\");\n  const _component_v_btn = _resolveComponent(\"v-btn\");\n  const _component_v_toolbar = _resolveComponent(\"v-toolbar\");\n  const _component_v_data_table_virtual = _resolveComponent(\"v-data-table-virtual\");\n  const _component_v_container = _resolveComponent(\"v-container\");\n  return _openBlock(), _createBlock(_component_v_container, null, {\n    default: _withCtx(() => [_createVNode(_component_v_data_table_virtual, {\n      headers: $data.headers,\n      items: $data.items,\n      height: \"400\",\n      \"item-value\": \"part_no\"\n    }, {\n      top: _withCtx(() => [_createVNode(_component_v_toolbar, {\n        flat: \"\"\n      }, {\n        default: _withCtx(() => [_createVNode(_component_v_toolbar_title, null, {\n          default: _withCtx(() => [_createTextVNode(\"Part Change over Matrix\")]),\n          _: 1 /* STABLE */\n        }), _createVNode(_component_v_spacer), _withDirectives(_createElementVNode(\"input\", {\n          color: \"primary\",\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.newPartNo = $event),\n          placeholder: \"Enter Part No\"\n        }, null, 512 /* NEED_PATCH */), [[_vModelText, _ctx.newPartNo]]), _createVNode(_component_v_btn, {\n          color: \"primary\",\n          onClick: $options.addNewPart\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"Add New Part No\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_btn, {\n          color: \"primary\",\n          onClick: $options.exportExcel\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"Dowload\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"]), _createVNode(_component_v_btn, {\n          color: \"primary\",\n          onClick: $options.triggerFileInput\n        }, {\n          default: _withCtx(() => [_createTextVNode(\"Upload\")]),\n          _: 1 /* STABLE */\n        }, 8 /* PROPS */, [\"onClick\"]), _createElementVNode(\"input\", {\n          type: \"file\",\n          ref: \"fileInput\",\n          onChange: _cache[1] || (_cache[1] = (...args) => $options.handleFileUpload && $options.handleFileUpload(...args)),\n          style: {\n            \"display\": \"none\"\n          }\n        }, null, 544 /* NEED_HYDRATION, NEED_PATCH */), _createCommentVNode(\" <p v-if=\\\"message\\\">{{ message }}</p> \")]),\n        _: 1 /* STABLE */\n      })]),\n      item: _withCtx(({\n        item\n      }) => [_createElementVNode(\"tr\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.headers, header => {\n        return _openBlock(), _createElementBlock(\"td\", {\n          key: header.key,\n          style: _normalizeStyle($options.getCellStyle(item[header.key]))\n        }, _toDisplayString(item[header.key]), 5 /* TEXT, STYLE */);\n      }), 128 /* KEYED_FRAGMENT */))])]),\n      _: 1 /* STABLE */\n    }, 8 /* PROPS */, [\"headers\", \"items\"])]),\n    _: 1 /* STABLE */\n  });\n}","map":{"version":3,"names":["_createBlock","_component_v_container","default","_withCtx","_createVNode","_component_v_data_table_virtual","headers","$data","items","height","top","_component_v_toolbar","flat","_component_v_toolbar_title","_createTextVNode","_","_component_v_spacer","_createElementVNode","color","_cache","$event","_ctx","newPartNo","placeholder","_component_v_btn","onClick","$options","addNewPart","exportExcel","triggerFileInput","type","ref","onChange","args","handleFileUpload","style","_createCommentVNode","item","_createElementBlock","_Fragment","_renderList","header","key","_normalizeStyle","getCellStyle"],"sources":["C:\\Users\\thun_\\Desktop\\fullstack-test\\frontend\\src\\components\\PartManager.vue"],"sourcesContent":["<template>\r\n  <v-container>\r\n    <v-data-table-virtual\r\n      :headers=\"headers\"\r\n      :items=\"items\"\r\n      height=\"400\"\r\n      item-value=\"part_no\"\r\n    >\r\n      <template v-slot:top>\r\n        <v-toolbar flat>\r\n          <v-toolbar-title>Part Change over Matrix</v-toolbar-title>\r\n          <v-spacer></v-spacer>\r\n          <input\r\n            color=\"primary\"\r\n            v-model=\"newPartNo\"\r\n            placeholder=\"Enter Part No\"\r\n          />\r\n          <v-btn color=\"primary\" @click=\"addNewPart\">Add New Part No</v-btn>\r\n          <v-btn color=\"primary\" @click=\"exportExcel\">Dowload</v-btn>\r\n          <v-btn color=\"primary\" @click=\"triggerFileInput\">Upload</v-btn>\r\n          <input\r\n            type=\"file\"\r\n            ref=\"fileInput\"\r\n            @change=\"handleFileUpload\"\r\n            style=\"display: none\"\r\n          />\r\n          <!-- <p v-if=\"message\">{{ message }}</p> -->\r\n        </v-toolbar>\r\n      </template>\r\n\r\n      <template v-slot:item=\"{ item }\">\r\n        <tr>\r\n          <td\r\n            v-for=\"header in headers\"\r\n            :key=\"header.key\"\r\n            :style=\"getCellStyle(item[header.key])\"\r\n          >\r\n            {{ item[header.key] }}\r\n          </td>\r\n        </tr>\r\n      </template>\r\n    </v-data-table-virtual>\r\n  </v-container>\r\n</template>\r\n\r\n<script>\r\nimport axios from \"axios\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      headers: [],\r\n      items: [],\r\n      file: null,\r\n      message: \"upload\",\r\n      newPart: \"\",\r\n    };\r\n  },\r\n  async mounted() {\r\n    await this.getItems();\r\n  },\r\n\r\n  methods: {\r\n    getCellStyle(value) {\r\n      return value === \"\"\r\n        ? { backgroundColor: \"black\", color: \"black\" }\r\n        : { backgroundColor: \"white\", color: \"black\" };\r\n    },\r\n\r\n    async getItems() {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/read/\");\r\n        if (response.status == 200) {\r\n          this.headers = response.data.columns.map((column) => {\r\n            return { title: column, key: column };\r\n          });\r\n\r\n          this.items = response.data.rows;\r\n          console.log(\"Items:\", this.items);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    },\r\n\r\n    triggerFileInput() {\r\n      this.$refs.fileInput.click();\r\n    },\r\n\r\n    handleFileUpload(event) {\r\n      this.file = event.target.files[0];\r\n    },\r\n\r\n    async uploadFile() {\r\n      if (!this.file) {\r\n        this.message = \"Please select a file to upload.\";\r\n        return;\r\n      }\r\n      let formData = new FormData();\r\n      formData.append(\"file\", this.file);\r\n      this.message = this.file.name;\r\n      console.log(\"Uploading file:\", this.file);\r\n      try {\r\n        const response = await axios.post(\r\n          \"http://127.0.0.1:8000/upload/\",\r\n          formData,\r\n          {\r\n            headers: {\r\n              \"Content-Type\": \"multipart/form-data\",\r\n            },\r\n          }\r\n        );\r\n\r\n        if (response.status == 200) {\r\n          this.getItems();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error uploading file:\", error);\r\n      }\r\n    },\r\n    async exportExcel() {\r\n      try {\r\n        const response = await axios.get(\"http://127.0.0.1:8000/export/\", {\r\n          responseType: \"blob\",\r\n        });\r\n\r\n        const url = window.URL.createObjectURL(new Blob([response.data]));\r\n        const link = document.createElement(\"a\");\r\n        link.href = url;\r\n        link.setAttribute(\"download\", \"part_file.xlsx\");\r\n        document.body.appendChild(link);\r\n        link.click();\r\n      } catch (error) {\r\n        console.error(\"Download error:\", error);\r\n      }\r\n    },\r\n\r\n    async updateExcel() {\r\n      try {\r\n        const data = {\r\n          columns: this.headers.map((header) => header.title),\r\n          rows: this.items.map((item) => Object.values(item)),\r\n        };\r\n\r\n        console.log(\"Data:\", data);\r\n\r\n        const response = await axios.post(\r\n          \"http://127.0.0.1:8000/update/\",\r\n          data\r\n        );\r\n\r\n        if (response.status == 200) {\r\n          this.getItems();\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error:\", error);\r\n      }\r\n    },\r\n    addNewPart() {\r\n      // ตรวจสอบว่า partNo ไม่ว่าง\r\n      if (this.newPartNo.trim()) {\r\n        // add new part to the last column\r\n        this.headers.push({ title: this.newPartNo, key: this.newPartNo });\r\n\r\n        // add \"0\" to new part\r\n        this.items.forEach((item) => {\r\n          item[this.newPartNo] = \"0\";\r\n        });\r\n\r\n        // add new part to each row\r\n        this.items.push({\r\n          Part_No: this.newPartNo,\r\n          ...Object.fromEntries(\r\n            this.headers.slice(1).map((header) => [header.title, \"0\"])\r\n          ),\r\n        });\r\n\r\n        // last row of last new part must be \"\" not \"0\"\r\n        this.items[this.items.length - 1][this.newPartNo] = \"\";\r\n\r\n        // update excel file\r\n        this.updateExcel();\r\n\r\n        this.newPartNo = \"\";\r\n      } else {\r\n        alert(\"Please enter a valid Part No\");\r\n      }\r\n    },\r\n  },\r\n  watch: {\r\n    file() {\r\n      this.uploadFile();\r\n    },\r\n  },\r\n};\r\n</script>\r\n"],"mappings":";;;;;;;;uBACEA,YAAA,CAyCcC,sBAAA;IA1ChBC,OAAA,EAAAC,QAAA,CAEI,MAuCuB,CAvCvBC,YAAA,CAuCuBC,+BAAA;MAtCpBC,OAAO,EAAEC,KAAA,CAAAD,OAAO;MAChBE,KAAK,EAAED,KAAA,CAAAC,KAAK;MACbC,MAAM,EAAC,KAAK;MACZ,YAAU,EAAC;;MAEMC,GAAG,EAAAP,QAAA,CAClB,MAkBY,CAlBZC,YAAA,CAkBYO,oBAAA;QAlBDC,IAAI,EAAJ;MAAI;QATvBV,OAAA,EAAAC,QAAA,CAUU,MAA0D,CAA1DC,YAAA,CAA0DS,0BAAA;UAVpEX,OAAA,EAAAC,QAAA,CAU2B,MAAuB,CAVlDW,gBAAA,CAU2B,yBAAuB,E;UAVlDC,CAAA;YAWUX,YAAA,CAAqBY,mBAAA,G,gBACrBC,mBAAA,CAIE;UAHAC,KAAK,EAAC,SAAS;UAb3B,uBAAAC,MAAA,QAAAA,MAAA,MAAAC,MAAA,IAcqBC,IAAA,CAAAC,SAAS,GAAAF,MAAA;UAClBG,WAAW,EAAC;uDADHF,IAAA,CAAAC,SAAS,E,GAGpBlB,YAAA,CAAkEoB,gBAAA;UAA3DN,KAAK,EAAC,SAAS;UAAEO,OAAK,EAAEC,QAAA,CAAAC;;UAjBzCzB,OAAA,EAAAC,QAAA,CAiBqD,MAAe,CAjBpEW,gBAAA,CAiBqD,iBAAe,E;UAjBpEC,CAAA;wCAkBUX,YAAA,CAA2DoB,gBAAA;UAApDN,KAAK,EAAC,SAAS;UAAEO,OAAK,EAAEC,QAAA,CAAAE;;UAlBzC1B,OAAA,EAAAC,QAAA,CAkBsD,MAAO,CAlB7DW,gBAAA,CAkBsD,SAAO,E;UAlB7DC,CAAA;wCAmBUX,YAAA,CAA+DoB,gBAAA;UAAxDN,KAAK,EAAC,SAAS;UAAEO,OAAK,EAAEC,QAAA,CAAAG;;UAnBzC3B,OAAA,EAAAC,QAAA,CAmB2D,MAAM,CAnBjEW,gBAAA,CAmB2D,QAAM,E;UAnBjEC,CAAA;wCAoBUE,mBAAA,CAKE;UAJAa,IAAI,EAAC,MAAM;UACXC,GAAG,EAAC,WAAW;UACdC,QAAM,EAAAb,MAAA,QAAAA,MAAA,UAAAc,IAAA,KAAEP,QAAA,CAAAQ,gBAAA,IAAAR,QAAA,CAAAQ,gBAAA,IAAAD,IAAA,CAAgB;UACzBE,KAAqB,EAArB;YAAA;UAAA;wDAEFC,mBAAA,2CAA4C,C;QA1BtDrB,CAAA;;MA8BuBsB,IAAI,EAAAlC,QAAA,CACnB,CAQK;QATkBkC;MAAI,OAC3BpB,mBAAA,CAQK,c,kBAPHqB,mBAAA,CAMKC,SAAA,QAtCfC,WAAA,CAiC6BjC,KAAA,CAAAD,OAAO,EAAjBmC,MAAM;6BADfH,mBAAA,CAMK;UAJFI,GAAG,EAAED,MAAM,CAACC,GAAG;UACfP,KAAK,EAnClBQ,eAAA,CAmCoBjB,QAAA,CAAAkB,YAAY,CAACP,IAAI,CAACI,MAAM,CAACC,GAAG;4BAEjCL,IAAI,CAACI,MAAM,CAACC,GAAG;;MArC9B3B,CAAA;;IAAAA,CAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}